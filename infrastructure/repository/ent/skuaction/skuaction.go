// Code generated by entc, DO NOT EDIT.

package skuaction

import (
	"time"
)

const (
	// Label holds the string label denoting the skuaction type in the database.
	Label = "sku_action"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldSkuName holds the string denoting the sku_name field in the database.
	FieldSkuName = "sku_name"
	// FieldSkuNameCn holds the string denoting the sku_name_cn field in the database.
	FieldSkuNameCn = "sku_name_cn"
	// FieldAction holds the string denoting the action field in the database.
	FieldAction = "action"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"

	// EdgeConfig holds the string denoting the config edge name in mutations.
	EdgeConfig = "config"
	// EdgeTemplate holds the string denoting the template edge name in mutations.
	EdgeTemplate = "template"
	// EdgeStatusCode holds the string denoting the status_code edge name in mutations.
	EdgeStatusCode = "status_code"

	// Table holds the table name of the skuaction in the database.
	Table = "sku_action"
	// ConfigTable is the table the holds the config relation/edge.
	ConfigTable = "sku_config"
	// ConfigInverseTable is the table name for the SkuConfig entity.
	// It exists in this package in order to avoid circular dependency with the "skuconfig" package.
	ConfigInverseTable = "sku_config"
	// ConfigColumn is the table column denoting the config relation/edge.
	ConfigColumn = "sku_action_id"
	// TemplateTable is the table the holds the template relation/edge.
	TemplateTable = "sku_template"
	// TemplateInverseTable is the table name for the SkuTemplate entity.
	// It exists in this package in order to avoid circular dependency with the "skutemplate" package.
	TemplateInverseTable = "sku_template"
	// TemplateColumn is the table column denoting the template relation/edge.
	TemplateColumn = "sku_action_id"
	// StatusCodeTable is the table the holds the status_code relation/edge.
	StatusCodeTable = "sku_status_code"
	// StatusCodeInverseTable is the table name for the SkuStatusCode entity.
	// It exists in this package in order to avoid circular dependency with the "skustatuscode" package.
	StatusCodeInverseTable = "sku_status_code"
	// StatusCodeColumn is the table column denoting the status_code relation/edge.
	StatusCodeColumn = "sku_action_id"
)

// Columns holds all SQL columns for skuaction fields.
var Columns = []string{
	FieldID,
	FieldAppID,
	FieldSkuName,
	FieldSkuNameCn,
	FieldAction,
	FieldStatus,
	FieldCreateAt,
	FieldUpdateAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateAt holds the default value on creation for the create_at field.
	DefaultCreateAt func() time.Time
	// DefaultUpdateAt holds the default value on creation for the update_at field.
	DefaultUpdateAt func() time.Time
	// UpdateDefaultUpdateAt holds the default value on update for the update_at field.
	UpdateDefaultUpdateAt func() time.Time
)
